// Code generated by entc, DO NOT EDIT.

package ent

import "context"

func (d *Department) Jobs(ctx context.Context) ([]*Job, error) {
	result, err := d.Edges.JobsOrErr()
	if IsNotLoaded(err) {
		result, err = d.QueryJobs().All(ctx)
	}
	return result, err
}

func (d *Department) Manager(ctx context.Context) (*User, error) {
	result, err := d.Edges.ManagerOrErr()
	if IsNotLoaded(err) {
		result, err = d.QueryManager().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (j *Job) Department(ctx context.Context) (*Department, error) {
	result, err := j.Edges.DepartmentOrErr()
	if IsNotLoaded(err) {
		result, err = j.QueryDepartment().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (u *User) Departments(ctx context.Context) ([]*Department, error) {
	result, err := u.Edges.DepartmentsOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryDepartments().All(ctx)
	}
	return result, err
}
